{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Ghu9IxGLC4ZZbUJj4LWY9OLPt_7t-l1W","timestamp":1749452808015}],"authorship_tag":"ABX9TyNZjlCYVe4K+eSePqj38Wny"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"f2401ce8fc8b468f82b6d52f91a92f13":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c2f570fb896547a68d77f70f2cda09c3","IPY_MODEL_78a9c18c365149d8b8677f3bfe586ece","IPY_MODEL_9b61f235d97c489982c7836022c4576d"],"layout":"IPY_MODEL_284ba11201c84405a4d23004ceffa965"}},"c2f570fb896547a68d77f70f2cda09c3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bae628d6c18c44969e35000a813baca0","placeholder":"​","style":"IPY_MODEL_d4dc8455d81f4f8cab877ec8e457ce8c","value":"Pandas Apply: 100%"}},"78a9c18c365149d8b8677f3bfe586ece":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_08b7951a2b9a4185a1d62a01f06dddcd","max":503697,"min":0,"orientation":"horizontal","style":"IPY_MODEL_55848bc75c9245a48414ad27754145f8","value":503697}},"9b61f235d97c489982c7836022c4576d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_65d97b78f79b4e83bfd46e277778e557","placeholder":"​","style":"IPY_MODEL_8ec239319bb64f458bee17b3b2e51291","value":" 503697/503697 [11:16&lt;00:00, 578.31it/s]"}},"284ba11201c84405a4d23004ceffa965":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bae628d6c18c44969e35000a813baca0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d4dc8455d81f4f8cab877ec8e457ce8c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"08b7951a2b9a4185a1d62a01f06dddcd":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"55848bc75c9245a48414ad27754145f8":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"65d97b78f79b4e83bfd46e277778e557":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8ec239319bb64f458bee17b3b2e51291":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"DnSj7DTKhhZY","executionInfo":{"status":"ok","timestamp":1749446075926,"user_tz":-330,"elapsed":4685,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np"]},{"cell_type":"code","source":["df = pd.read_csv(\"BeerDataScienceProject.tar.bz2\", compression=\"bz2\", encoding=\"latin-1\")"],"metadata":{"id":"qUEapLf1Hr0J","executionInfo":{"status":"ok","timestamp":1749446322459,"user_tz":-330,"elapsed":37363,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":503},"id":"ZH_bcBgJH9Us","executionInfo":{"status":"ok","timestamp":1749446416776,"user_tz":-330,"elapsed":26,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"83b494b8-a06d-4319-f257-a05b800f9548"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   beer_ABV  beer_beerId  beer_brewerId               beer_name  \\\n","0       5.0        47986          10325            Sausa Weizen   \n","1       6.2        48213          10325                Red Moon   \n","2       6.5        48215          10325  Black Horse Black Beer   \n","3       5.0        47969          10325              Sausa Pils   \n","4       7.7        64883           1075           Cauldron DIPA   \n","\n","                       beer_style  review_appearance  review_palette  \\\n","0                      Hefeweizen                2.5             2.0   \n","1              English Strong Ale                3.0             2.5   \n","2          Foreign / Export Stout                3.0             2.5   \n","3                 German Pilsener                3.5             3.0   \n","4  American Double / Imperial IPA                4.0             4.5   \n","\n","   review_overall  review_taste review_profileName  review_aroma  \\\n","0             1.5           1.5            stcules           1.5   \n","1             3.0           3.0            stcules           3.0   \n","2             3.0           3.0            stcules           3.0   \n","3             3.0           2.5            stcules           3.0   \n","4             4.0           4.0     johnmichaelsen           4.5   \n","\n","                                         review_text  review_time  \n","0  A lot of foam. But a lot. In the smell some ba...   1234817823  \n","1  Dark red color, light beige foam, average. In ...   1235915097  \n","2  Almost totally black. Beige foam, quite compac...   1235916604  \n","3  Golden yellow color. White, compact foam, quit...   1234725145  \n","4  According to the website, the style for the Ca...   1293735206  "],"text/html":["\n","  <div id=\"df-eb05dfb1-9bb6-49f1-b778-aa39e4e0c336\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>beer_ABV</th>\n","      <th>beer_beerId</th>\n","      <th>beer_brewerId</th>\n","      <th>beer_name</th>\n","      <th>beer_style</th>\n","      <th>review_appearance</th>\n","      <th>review_palette</th>\n","      <th>review_overall</th>\n","      <th>review_taste</th>\n","      <th>review_profileName</th>\n","      <th>review_aroma</th>\n","      <th>review_text</th>\n","      <th>review_time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5.0</td>\n","      <td>47986</td>\n","      <td>10325</td>\n","      <td>Sausa Weizen</td>\n","      <td>Hefeweizen</td>\n","      <td>2.5</td>\n","      <td>2.0</td>\n","      <td>1.5</td>\n","      <td>1.5</td>\n","      <td>stcules</td>\n","      <td>1.5</td>\n","      <td>A lot of foam. But a lot. In the smell some ba...</td>\n","      <td>1234817823</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>6.2</td>\n","      <td>48213</td>\n","      <td>10325</td>\n","      <td>Red Moon</td>\n","      <td>English Strong Ale</td>\n","      <td>3.0</td>\n","      <td>2.5</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>stcules</td>\n","      <td>3.0</td>\n","      <td>Dark red color, light beige foam, average. In ...</td>\n","      <td>1235915097</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>6.5</td>\n","      <td>48215</td>\n","      <td>10325</td>\n","      <td>Black Horse Black Beer</td>\n","      <td>Foreign / Export Stout</td>\n","      <td>3.0</td>\n","      <td>2.5</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>stcules</td>\n","      <td>3.0</td>\n","      <td>Almost totally black. Beige foam, quite compac...</td>\n","      <td>1235916604</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>5.0</td>\n","      <td>47969</td>\n","      <td>10325</td>\n","      <td>Sausa Pils</td>\n","      <td>German Pilsener</td>\n","      <td>3.5</td>\n","      <td>3.0</td>\n","      <td>3.0</td>\n","      <td>2.5</td>\n","      <td>stcules</td>\n","      <td>3.0</td>\n","      <td>Golden yellow color. White, compact foam, quit...</td>\n","      <td>1234725145</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>7.7</td>\n","      <td>64883</td>\n","      <td>1075</td>\n","      <td>Cauldron DIPA</td>\n","      <td>American Double / Imperial IPA</td>\n","      <td>4.0</td>\n","      <td>4.5</td>\n","      <td>4.0</td>\n","      <td>4.0</td>\n","      <td>johnmichaelsen</td>\n","      <td>4.5</td>\n","      <td>According to the website, the style for the Ca...</td>\n","      <td>1293735206</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-eb05dfb1-9bb6-49f1-b778-aa39e4e0c336')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-eb05dfb1-9bb6-49f1-b778-aa39e4e0c336 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-eb05dfb1-9bb6-49f1-b778-aa39e4e0c336');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-47adeb3d-2fbe-40b0-9395-05fb6b25aa27\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47adeb3d-2fbe-40b0-9395-05fb6b25aa27')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-47adeb3d-2fbe-40b0-9395-05fb6b25aa27 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h2v7kmB4IY3m","executionInfo":{"status":"ok","timestamp":1749446525494,"user_tz":-330,"elapsed":24,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"8dd3d4d4-b90c-4a2a-a379-1c6ee46c8545"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(528870, 13)"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Yh_naYMPIj_1","executionInfo":{"status":"ok","timestamp":1749446668104,"user_tz":-330,"elapsed":35,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"56e27a7f-b276-4dc5-9c60-429dd79a0f4d"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['beer_ABV', 'beer_beerId', 'beer_brewerId', 'beer_name', 'beer_style',\n","       'review_appearance', 'review_palette', 'review_overall', 'review_taste',\n","       'review_profileName', 'review_aroma', 'review_text', 'review_time'],\n","      dtype='object')"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df[[\"review_appearance\", \"review_palette\", \"review_overall\", \"review_taste\", \"review_aroma\"]].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"9LzI92RZJazG","executionInfo":{"status":"ok","timestamp":1749446734459,"user_tz":-330,"elapsed":38,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"f48e2488-4577-44ef-f8a0-243e30b27396"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       review_appearance  review_palette  review_overall   review_taste  \\\n","count      528870.000000   528870.000000   528870.000000  528870.000000   \n","mean            3.864522        3.758926        3.833197       3.765993   \n","std             0.604010        0.685335        0.709962       0.669018   \n","min             0.000000        1.000000        0.000000       1.000000   \n","25%             3.500000        3.500000        3.500000       3.500000   \n","50%             4.000000        4.000000        4.000000       4.000000   \n","75%             4.000000        4.000000        4.500000       4.000000   \n","max             5.000000        5.000000        5.000000       5.000000   \n","\n","        review_aroma  \n","count  528870.000000  \n","mean        3.817350  \n","std         0.718903  \n","min         1.000000  \n","25%         3.500000  \n","50%         4.000000  \n","75%         4.500000  \n","max         5.000000  "],"text/html":["\n","  <div id=\"df-e3809086-9353-4f22-8e93-4d9340bc05ef\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review_appearance</th>\n","      <th>review_palette</th>\n","      <th>review_overall</th>\n","      <th>review_taste</th>\n","      <th>review_aroma</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>528870.000000</td>\n","      <td>528870.000000</td>\n","      <td>528870.000000</td>\n","      <td>528870.000000</td>\n","      <td>528870.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>3.864522</td>\n","      <td>3.758926</td>\n","      <td>3.833197</td>\n","      <td>3.765993</td>\n","      <td>3.817350</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.604010</td>\n","      <td>0.685335</td>\n","      <td>0.709962</td>\n","      <td>0.669018</td>\n","      <td>0.718903</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>3.500000</td>\n","      <td>3.500000</td>\n","      <td>3.500000</td>\n","      <td>3.500000</td>\n","      <td>3.500000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>4.500000</td>\n","      <td>4.000000</td>\n","      <td>4.500000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e3809086-9353-4f22-8e93-4d9340bc05ef')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e3809086-9353-4f22-8e93-4d9340bc05ef button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e3809086-9353-4f22-8e93-4d9340bc05ef');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-21c8decf-de69-4944-be1d-530a23cfa885\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-21c8decf-de69-4944-be1d-530a23cfa885')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-21c8decf-de69-4944-be1d-530a23cfa885 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df[[\\\"review_appearance\\\", \\\"review_palette\\\", \\\"review_overall\\\", \\\"review_taste\\\", \\\"review_aroma\\\"]]\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"review_appearance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 186982.72262052554,\n        \"min\": 0.0,\n        \"max\": 528870.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528870.0,\n          3.8645224724412426,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_palette\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 186982.6733366693,\n        \"min\": 0.6853348637611641,\n        \"max\": 528870.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528870.0,\n          3.7589256338986896,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_overall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 186982.69359777772,\n        \"min\": 0.0,\n        \"max\": 528870.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8331971940174334,\n          4.0,\n          528870.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_taste\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 186982.67380391332,\n        \"min\": 0.6690176237244254,\n        \"max\": 528870.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          528870.0,\n          3.7659925879705787,\n          4.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_aroma\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 186982.6434368954,\n        \"min\": 0.7189030161824539,\n        \"max\": 528870.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.8173501994819143,\n          4.0,\n          528870.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df = df[df[\"review_appearance\"] > 0]\n","df = df[df[\"review_overall\"] > 0]"],"metadata":{"id":"p2qVefTAJrBM","executionInfo":{"status":"ok","timestamp":1749447475495,"user_tz":-330,"elapsed":463,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oH1UBDFKNQXe","executionInfo":{"status":"ok","timestamp":1749447678042,"user_tz":-330,"elapsed":23,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"6e8d518b-314d-4c77-8c0d-c0bb9f331592"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(508355, 13)"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qZBkz9WuMf4Z","executionInfo":{"status":"ok","timestamp":1749447488479,"user_tz":-330,"elapsed":93,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"86084c3f-ab53-48e4-c62d-c54606a25b4e"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","Index: 528867 entries, 0 to 528869\n","Data columns (total 13 columns):\n"," #   Column              Non-Null Count   Dtype  \n","---  ------              --------------   -----  \n"," 0   beer_ABV            508587 non-null  float64\n"," 1   beer_beerId         528867 non-null  int64  \n"," 2   beer_brewerId       528867 non-null  int64  \n"," 3   beer_name           528867 non-null  object \n"," 4   beer_style          528867 non-null  object \n"," 5   review_appearance   528867 non-null  float64\n"," 6   review_palette      528867 non-null  float64\n"," 7   review_overall      528867 non-null  float64\n"," 8   review_taste        528867 non-null  float64\n"," 9   review_profileName  528752 non-null  object \n"," 10  review_aroma        528867 non-null  float64\n"," 11  review_text         528748 non-null  object \n"," 12  review_time         528867 non-null  int64  \n","dtypes: float64(6), int64(3), object(4)\n","memory usage: 56.5+ MB\n"]}]},{"cell_type":"markdown","source":["Looking at the output in the previous cell, we see that different columns have different non-null counts. Easiest solution to deal with it is to drop any row that has a null value by assuming that for that record we have error in collecting the data - the set is mostly complete so this shouldn't be a problem."],"metadata":{"id":"lge0mcmKNAFp"}},{"cell_type":"code","source":["df = df.dropna()"],"metadata":{"id":"pc8LxMSVMho9","executionInfo":{"status":"ok","timestamp":1749447643878,"user_tz":-330,"elapsed":214,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kjmPXdq6NJAb","executionInfo":{"status":"ok","timestamp":1749447655385,"user_tz":-330,"elapsed":33,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"f126a929-ce84-4ed5-cea6-d80bf3f2d395"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(508355, 13)"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["Last thing that we want to do before moving on to answering the question is to deal with the problem of multiple reviews. A user can leave multiple reviews on the same beer, at different times, and this can affect our results. We would like one review per beer / user combination, so we keep only the highest overall review that a user has left for each beer ID."],"metadata":{"id":"X8dV12ApNhjm"}},{"cell_type":"code","source":["df = df.sort_values(by=\"review_overall\", ascending=False).drop_duplicates(subset=[\"review_profileName\", \"beer_beerId\"],\n","                                                                          keep=\"first\")"],"metadata":{"id":"Ie_RB1J1NL1q","executionInfo":{"status":"ok","timestamp":1749447840714,"user_tz":-330,"elapsed":364,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"F12VMs_WN5AN","executionInfo":{"status":"ok","timestamp":1749448031628,"user_tz":-330,"elapsed":47,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"956e4190-310d-4b7f-ab9d-f9695250b8e0"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(503697, 13)"]},"metadata":{},"execution_count":19}]},{"cell_type":"markdown","source":["Question 1\n","Rank the top 3 breweries which produce the strongest beers (a beer's strength is determined by its ABV content)."],"metadata":{"id":"L_VduLwLOxYC"}},{"cell_type":"code","source":["top_breweries_by_strength = df.groupby(\"beer_brewerId\")[\"beer_ABV\"].mean().sort_values(ascending=False).head(3)\n","print(top_breweries_by_strength)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RlVLb573Onr5","executionInfo":{"status":"ok","timestamp":1749448177965,"user_tz":-330,"elapsed":42,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"96785950-5177-432a-f0f8-103185863517"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["beer_brewerId\n","6513     19.228824\n","736      13.750000\n","24215    12.466667\n","Name: beer_ABV, dtype: float64\n"]}]},{"cell_type":"code","source":["print(df[\"beer_brewerId\"].unique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1uLo4N3VPLb0","executionInfo":{"status":"ok","timestamp":1749448384555,"user_tz":-330,"elapsed":27,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"9ab9e61a-fb36-4982-8bfd-012f6c2da957"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["[  207  1075 17981 ... 21201  1431 13496]\n"]}]},{"cell_type":"code","source":["num_unique_breweries = df[\"beer_brewerId\"].nunique()\n","print(num_unique_breweries)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0Z6irbRyP3xI","executionInfo":{"status":"ok","timestamp":1749448412261,"user_tz":-330,"elapsed":172,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"72f53c0a-363e-425c-b6c7-481998fe3136"},"execution_count":24,"outputs":[{"output_type":"stream","name":"stdout","text":["1607\n"]}]},{"cell_type":"markdown","source":["**Question 2**\n","\n","Which year did beers enjoy the highest ratings?"],"metadata":{"id":"R1OYyJTqRKYL"}},{"cell_type":"code","source":["df['review_year'] = pd.to_datetime(df['review_time'], unit='s').dt.year\n","average_rating_by_year = df.groupby('review_year')['review_overall'].mean()\n","year_highest_rating = average_rating_by_year.idxmax()\n","print(f\"The year with the highest average beer rating was: {year_highest_rating}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cp4lAwtQRM2m","executionInfo":{"status":"ok","timestamp":1749448832468,"user_tz":-330,"elapsed":111,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"d52d9e4f-a8bf-4d30-dab4-7283c2f90fe8"},"execution_count":25,"outputs":[{"output_type":"stream","name":"stdout","text":["The year with the highest average beer rating was: 2000\n"]}]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","# Sort the average ratings and select the top 5\n","top_5_years = average_rating_by_year.sort_values(ascending=False).head(5)\n","\n","# Create the bar plot\n","plt.figure(figsize=(10, 6)) # Adjust figure size for better readability\n","top_5_years.plot(kind='bar')\n","\n","# Add titles and labels\n","plt.title('Top 5 Years by Average Beer Review Rating')\n","plt.xlabel('Year')\n","plt.ylabel('Average Overall Rating')\n","\n","\n","# Display the plot\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":586},"id":"JdEcjHgTRrQt","executionInfo":{"status":"ok","timestamp":1749449650705,"user_tz":-330,"elapsed":48,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"86e22217-6156-48a2-9dca-e4db36b86e9e"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Question 3**\n","\n","Based on the users' ratings, which factors are important among taste, aroma, appearance, and palette?"],"metadata":{"id":"jOk17L3MXDkX"}},{"cell_type":"code","source":["correlation_matrix = df[['review_taste', 'review_aroma', 'review_appearance', 'review_palette', 'review_overall']].corr()\n","print(correlation_matrix)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CJtqwaeSUi7p","executionInfo":{"status":"ok","timestamp":1749450312530,"user_tz":-330,"elapsed":358,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"541e964d-807b-4df6-e4d7-66de7297eb3c"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stdout","text":["                   review_taste  review_aroma  review_appearance  \\\n","review_taste           1.000000      0.722325           0.551291   \n","review_aroma           0.722325      1.000000           0.530576   \n","review_appearance      0.551291      0.530576           1.000000   \n","review_palette         0.600243      0.702935           0.544238   \n","review_overall         0.689048      0.780321           0.482525   \n","\n","                   review_palette  review_overall  \n","review_taste             0.600243        0.689048  \n","review_aroma             0.702935        0.780321  \n","review_appearance        0.544238        0.482525  \n","review_palette           1.000000        0.597800  \n","review_overall           0.597800        1.000000  \n"]}]},{"cell_type":"code","source":["from seaborn import heatmap"],"metadata":{"id":"O75i2QiHXUiS","executionInfo":{"status":"ok","timestamp":1749450369956,"user_tz":-330,"elapsed":1690,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","plt.figure(figsize=(8, 6)) # Adjust figure size for better readability\n","sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=\".2f\", linewidths=.5)\n","plt.title('Correlation Matrix of Beer Review Factors and Overall Rating')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":666},"id":"LJExMMT5XiMD","executionInfo":{"status":"ok","timestamp":1749450440642,"user_tz":-330,"elapsed":770,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"2eb291a6-696e-4e08-c313-81158a2d4456"},"execution_count":30,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["**Question 4**\n","\n","If you were to recommend 3 beers to your friends based on this data, which ones would you recommend?"],"metadata":{"id":"6-mzeAquYImc"}},{"cell_type":"markdown","source":["If we were to recommend beers to our friends, based on this data set only, we would like to recommend them the ones that are reviewed most often, and most highly."],"metadata":{"id":"hNf-00p1Y1ci"}},{"cell_type":"code","source":["df_q4 = df.groupby(by=\"beer_beerId\")[\"review_overall\"].agg([\"count\", \"mean\"])\n","# once again, renaming for readability\n","df_q4 = df_q4.rename(columns={\n","    \"count\": \"num_reviews\",\n","    \"mean\": \"mean_overall_review\"\n","})"],"metadata":{"id":"BjB9yQoFYY7R","executionInfo":{"status":"ok","timestamp":1749450694835,"user_tz":-330,"elapsed":25,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"execution_count":32,"outputs":[]},{"cell_type":"code","source":["df_q4.sort_values(by=\"mean_overall_review\", ascending=False, inplace=True)"],"metadata":{"id":"px_VlNMZYx7B","executionInfo":{"status":"ok","timestamp":1749450722639,"user_tz":-330,"elapsed":28,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}}},"execution_count":33,"outputs":[]},{"cell_type":"code","source":["df_q4.head(n=10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":394},"id":"LQxznL67Y4s2","executionInfo":{"status":"ok","timestamp":1749450731427,"user_tz":-330,"elapsed":51,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"a96d18ca-5e15-43df-9b07-ec29594cd7c4"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             num_reviews  mean_overall_review\n","beer_beerId                                  \n","32283                  1                  5.0\n","63618                  1                  5.0\n","63598                  1                  5.0\n","63673                  1                  5.0\n","20326                  1                  5.0\n","37226                  1                  5.0\n","55601                  1                  5.0\n","20480                  1                  5.0\n","20584                  1                  5.0\n","63735                  1                  5.0"],"text/html":["\n","  <div id=\"df-3a197235-54a0-42bd-9271-28f86a52eeeb\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_reviews</th>\n","      <th>mean_overall_review</th>\n","    </tr>\n","    <tr>\n","      <th>beer_beerId</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>32283</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>63618</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>63598</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>63673</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>20326</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>37226</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>55601</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>20480</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>20584</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","    <tr>\n","      <th>63735</th>\n","      <td>1</td>\n","      <td>5.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3a197235-54a0-42bd-9271-28f86a52eeeb')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3a197235-54a0-42bd-9271-28f86a52eeeb button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3a197235-54a0-42bd-9271-28f86a52eeeb');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e072d022-a30b-44dc-ba21-67701c65c541\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e072d022-a30b-44dc-ba21-67701c65c541')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e072d022-a30b-44dc-ba21-67701c65c541 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_q4","summary":"{\n  \"name\": \"df_q4\",\n  \"rows\": 14990,\n  \"fields\": [\n    {\n      \"column\": \"beer_beerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22634,\n        \"min\": 5,\n        \"max\": 77310,\n        \"num_unique_values\": 14990,\n        \"samples\": [\n          73641,\n          31470,\n          34341\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 140,\n        \"min\": 1,\n        \"max\": 2928,\n        \"num_unique_values\": 594,\n        \"samples\": [\n          17,\n          477,\n          407\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_overall_review\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6250749583000184,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 2257,\n        \"samples\": [\n          4.01,\n          4.071428571428571,\n          3.5925925925925926\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["While their grade is perfect, these beers have only been reviewed once / by a single user; and the opinions are too subjective. We would want to recommend beers that are accepted by a broader number of people, i.e., beers that are enjoyed by a larger audience.\n","\n","Let's do a little investigation in the distribution of the number of reviews per beer, and see which number would be a proper cut-off."],"metadata":{"id":"2rYn-hmMZGuE"}},{"cell_type":"code","source":["df_q4.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"eBH7JXlAY61U","executionInfo":{"status":"ok","timestamp":1749450792060,"user_tz":-330,"elapsed":42,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"733c4024-86d2-4eb7-c8b0-468989fcaa2a"},"execution_count":35,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        num_reviews  mean_overall_review\n","count  14990.000000         14990.000000\n","mean      33.602201             3.651688\n","std      140.888150             0.625075\n","min        1.000000             1.000000\n","25%        1.000000             3.400000\n","50%        3.000000             3.750000\n","75%       10.000000             4.000000\n","max     2928.000000             5.000000"],"text/html":["\n","  <div id=\"df-63ae52f4-43ab-4654-a907-1992f43481d4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_reviews</th>\n","      <th>mean_overall_review</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>14990.000000</td>\n","      <td>14990.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>33.602201</td>\n","      <td>3.651688</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>140.888150</td>\n","      <td>0.625075</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.000000</td>\n","      <td>3.400000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>3.000000</td>\n","      <td>3.750000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>10.000000</td>\n","      <td>4.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2928.000000</td>\n","      <td>5.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63ae52f4-43ab-4654-a907-1992f43481d4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63ae52f4-43ab-4654-a907-1992f43481d4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63ae52f4-43ab-4654-a907-1992f43481d4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e2675806-2cf3-4d60-a21a-d986aeb0c38f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e2675806-2cf3-4d60-a21a-d986aeb0c38f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e2675806-2cf3-4d60-a21a-d986aeb0c38f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_q4\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"num_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5241.445039657447,\n        \"min\": 1.0,\n        \"max\": 14990.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          14990.0,\n          33.602201467645095,\n          10.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_overall_review\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5298.683322506494,\n        \"min\": 0.6250749583000184,\n        \"max\": 14990.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.6516880339542164,\n          3.75,\n          14990.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":35}]},{"cell_type":"markdown","source":["The distribution of reviews seems very skewed. Over 50% of beers have less than 3 reviews. Let's plot it and get an even better understanding"],"metadata":{"id":"ZsLAkuTdZPjg"}},{"cell_type":"code","source":["_ = df_q4.hist(column=\"num_reviews\", bins=40, figsize=(10, 7))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":622},"id":"NZnmbrKrZJo-","executionInfo":{"status":"ok","timestamp":1749450827002,"user_tz":-330,"elapsed":334,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"f86f83bf-fa7c-4265-8839-a77e2ee86d11"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["As expected, a huge spike is noticed in the lowest bucket. Empirically, we choose 200 reviews as a cut-off point above which we will recommend beers. That's how much we care about our friends. Change the number appropriately for your friends and compare the resu"],"metadata":{"id":"pyCbljV1ZW1T"}},{"cell_type":"code","source":["# plotting the distribution again\n","_ = df_q4[df_q4[\"num_reviews\"] > 200].hist(column=\"num_reviews\", bins=30, figsize=(10, 7))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":622},"id":"mDUMqVg1ZSIQ","executionInfo":{"status":"ok","timestamp":1749450873586,"user_tz":-330,"elapsed":770,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"9e646273-8736-4fb0-b044-f6fe68358e4b"},"execution_count":37,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x700 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# printing the head of the DataFrame, to get the top beer IDs\n","df_q4[df_q4[\"num_reviews\"] > 200].head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":237},"id":"Sbse2F8wZdXb","executionInfo":{"status":"ok","timestamp":1749450889880,"user_tz":-330,"elapsed":38,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"20cbc849-d947-4d36-c848-166f6119f9ff"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["             num_reviews  mean_overall_review\n","beer_beerId                                  \n","56082                246             4.630081\n","16814                443             4.623025\n","47658                618             4.597087\n","6368                 627             4.491228\n","2899                 281             4.437722"],"text/html":["\n","  <div id=\"df-116f5db6-1522-4206-9a45-d3643269065b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>num_reviews</th>\n","      <th>mean_overall_review</th>\n","    </tr>\n","    <tr>\n","      <th>beer_beerId</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>56082</th>\n","      <td>246</td>\n","      <td>4.630081</td>\n","    </tr>\n","    <tr>\n","      <th>16814</th>\n","      <td>443</td>\n","      <td>4.623025</td>\n","    </tr>\n","    <tr>\n","      <th>47658</th>\n","      <td>618</td>\n","      <td>4.597087</td>\n","    </tr>\n","    <tr>\n","      <th>6368</th>\n","      <td>627</td>\n","      <td>4.491228</td>\n","    </tr>\n","    <tr>\n","      <th>2899</th>\n","      <td>281</td>\n","      <td>4.437722</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-116f5db6-1522-4206-9a45-d3643269065b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-116f5db6-1522-4206-9a45-d3643269065b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-116f5db6-1522-4206-9a45-d3643269065b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e44f0055-76b1-4ad6-832e-0d90e56529b5\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e44f0055-76b1-4ad6-832e-0d90e56529b5')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e44f0055-76b1-4ad6-832e-0d90e56529b5 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_q4[df_q4[\\\"num_reviews\\\"] > 200]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"beer_beerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 24379,\n        \"min\": 2899,\n        \"max\": 56082,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16814,\n          2899,\n          47658\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"num_reviews\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 179,\n        \"min\": 246,\n        \"max\": 627,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          443,\n          281,\n          618\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean_overall_review\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08639065637791869,\n        \"min\": 4.437722419928826,\n        \"max\": 4.630081300813008,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          4.623024830699774,\n          4.437722419928826,\n          4.597087378640777\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# we can print some top-rated beers in the previous result; to see their names and styles\n","# apparently, our friends will enjoy American Doubles\n","df[(df[\"beer_beerId\"] == 56082) | (df[\"beer_beerId\"] == 47658) | (df[\"beer_beerId\"] == 16814)].drop_duplicates(\n","    subset=\"beer_beerId\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":336},"id":"xfHol2c7ZhhM","executionInfo":{"status":"ok","timestamp":1749450906518,"user_tz":-330,"elapsed":37,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"ada8c6ba-8b34-45be-a674-6a4ac9550be1"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        beer_ABV  beer_beerId  beer_brewerId                    beer_name  \\\n","335102       8.0        56082          14064                   Citra DIPA   \n","16188       10.6        47658           1199  Founders CBS Imperial Stout   \n","378865       8.0        16814          27039                 Heady Topper   \n","\n","                              beer_style  review_appearance  review_palette  \\\n","335102    American Double / Imperial IPA                4.5             5.0   \n","16188   American Double / Imperial Stout                5.0             5.0   \n","378865    American Double / Imperial IPA                5.0             4.5   \n","\n","        review_overall  review_taste review_profileName  review_aroma  \\\n","335102             5.0           4.5             julian           5.0   \n","16188              5.0           5.0          clint1019           5.0   \n","378865             5.0           4.5           Khazadum           5.0   \n","\n","                                              review_text  review_time  \\\n","335102  First off, this beer was enjoyed at an EPIC st...   1314638949   \n","16188   A - Black in color with a chocolate head that ...   1321407889   \n","378865  A- Thick, creamy looking body and a super stic...   1321313455   \n","\n","        review_year  \n","335102         2011  \n","16188          2011  \n","378865         2011  "],"text/html":["\n","  <div id=\"df-55acf519-1207-4c87-9829-2af60fb38505\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>beer_ABV</th>\n","      <th>beer_beerId</th>\n","      <th>beer_brewerId</th>\n","      <th>beer_name</th>\n","      <th>beer_style</th>\n","      <th>review_appearance</th>\n","      <th>review_palette</th>\n","      <th>review_overall</th>\n","      <th>review_taste</th>\n","      <th>review_profileName</th>\n","      <th>review_aroma</th>\n","      <th>review_text</th>\n","      <th>review_time</th>\n","      <th>review_year</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>335102</th>\n","      <td>8.0</td>\n","      <td>56082</td>\n","      <td>14064</td>\n","      <td>Citra DIPA</td>\n","      <td>American Double / Imperial IPA</td>\n","      <td>4.5</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>4.5</td>\n","      <td>julian</td>\n","      <td>5.0</td>\n","      <td>First off, this beer was enjoyed at an EPIC st...</td>\n","      <td>1314638949</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>16188</th>\n","      <td>10.6</td>\n","      <td>47658</td>\n","      <td>1199</td>\n","      <td>Founders CBS Imperial Stout</td>\n","      <td>American Double / Imperial Stout</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>5.0</td>\n","      <td>clint1019</td>\n","      <td>5.0</td>\n","      <td>A - Black in color with a chocolate head that ...</td>\n","      <td>1321407889</td>\n","      <td>2011</td>\n","    </tr>\n","    <tr>\n","      <th>378865</th>\n","      <td>8.0</td>\n","      <td>16814</td>\n","      <td>27039</td>\n","      <td>Heady Topper</td>\n","      <td>American Double / Imperial IPA</td>\n","      <td>5.0</td>\n","      <td>4.5</td>\n","      <td>5.0</td>\n","      <td>4.5</td>\n","      <td>Khazadum</td>\n","      <td>5.0</td>\n","      <td>A- Thick, creamy looking body and a super stic...</td>\n","      <td>1321313455</td>\n","      <td>2011</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55acf519-1207-4c87-9829-2af60fb38505')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-55acf519-1207-4c87-9829-2af60fb38505 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-55acf519-1207-4c87-9829-2af60fb38505');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7ed3f668-4300-4bd1-af28-a9e3d418c647\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7ed3f668-4300-4bd1-af28-a9e3d418c647')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7ed3f668-4300-4bd1-af28-a9e3d418c647 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"    subset=\\\"beer_beerId\\\")\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"beer_ABV\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5011106998930268,\n        \"min\": 8.0,\n        \"max\": 10.6,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          10.6,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"beer_beerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20673,\n        \"min\": 16814,\n        \"max\": 56082,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          56082,\n          47658\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"beer_brewerId\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12920,\n        \"min\": 1199,\n        \"max\": 27039,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          14064,\n          1199\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"beer_name\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Citra DIPA\",\n          \"Founders CBS Imperial Stout\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"beer_style\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"American Double / Imperial Stout\",\n          \"American Double / Imperial IPA\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_appearance\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28867513459481287,\n        \"min\": 4.5,\n        \"max\": 5.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          5.0,\n          4.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_palette\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28867513459481287,\n        \"min\": 4.5,\n        \"max\": 5.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4.5,\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_overall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 5.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_taste\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.28867513459481287,\n        \"min\": 4.5,\n        \"max\": 5.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_profileName\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"julian\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_aroma\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 5.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          5.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"First off, this beer was enjoyed at an EPIC stout tasting (KtG, BT, BA Speedway, DL, Jackie O's BA DA, etc...) and this was probably the best beer we had that night. It's just outrageously delicious. A: Hazy dark citrus orange in color with a nice white bubbly head that fades to a nice layer of foam on the surface. The color makes me want to bathe in it. So beautiful 4.5 S: This stuff should be sold to beer geeks as a sexual pheromone. The aroma on this is just outrageous! First pop of the cap and the waft of tropical/exotic fruits and hops hits your nose immediately. This is a full on aromatic assault of citrus, mangoes, peaches, grapefruit, pineapple and some resinous hoppy citrus hops. Holy shit this stuff smells like sex in a bottle. 5 T&M : Not surprisingly, the flavor follows the nose almost to a tee. A full on mouthgasm of hoppy citrus flavors, mangoes, peaches, pineapple, orange, and enough malt backbone to perfectly compliment everything. The malt backbone almost has a honey like quality but in no way is sweet like honey. Beautiful. Mouthfeel is medium bodied, yet crisp and amazingly refreshing. This is highly, HIGHLY drinkable. This beer is liquid art. 5 / 4.5 O: I don't even know what to say. I think the brewer stumbled upon one of the greatest DIPA recipes known to man. Everything about this is damn near perfect in every way. I can't recommend this highly enough. It's definitely in my top 5 as of right now.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3881075,\n        \"min\": 1314638949,\n        \"max\": 1321407889,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1314638949\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2011\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}]},{"cell_type":"markdown","source":["**Question 5**\n","\n","Which beer style seems to be the favourite based on the reviews written by users? How does written reviews compare to overall review score for that beer style?"],"metadata":{"id":"Crv1ZRS7Z0KY"}},{"cell_type":"markdown","source":["We create a new column review_sentiment which is the compound score of the review text. Executing this cell will take a few minutes"],"metadata":{"id":"RhsG25slaSgW"}},{"cell_type":"code","source":["pip install swifter"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"UdZJRXLScQz-","executionInfo":{"status":"ok","timestamp":1749451616825,"user_tz":-330,"elapsed":6525,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"1dcfbb2c-6870-4595-f3af-87f4ce53e00c"},"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting swifter\n","  Downloading swifter-1.4.0.tar.gz (1.2 MB)\n","\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/1.2 MB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[91m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[91m╸\u001b[0m\u001b[90m━━━━\u001b[0m \u001b[32m1.1/1.2 MB\u001b[0m \u001b[31m31.9 MB/s\u001b[0m eta \u001b[36m0:00:01\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.2/1.2 MB\u001b[0m \u001b[31m19.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: pandas>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from swifter) (2.2.2)\n","Requirement already satisfied: psutil>=5.6.6 in /usr/local/lib/python3.11/dist-packages (from swifter) (5.9.5)\n","Requirement already satisfied: dask>=2.10.0 in /usr/local/lib/python3.11/dist-packages (from dask[dataframe]>=2.10.0->swifter) (2024.12.1)\n","Requirement already satisfied: tqdm>=4.33.0 in /usr/local/lib/python3.11/dist-packages (from swifter) (4.67.1)\n","Requirement already satisfied: click>=8.1 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (8.2.1)\n","Requirement already satisfied: cloudpickle>=3.0.0 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (3.1.1)\n","Requirement already satisfied: fsspec>=2021.09.0 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (2025.3.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (24.2)\n","Requirement already satisfied: partd>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (1.4.2)\n","Requirement already satisfied: pyyaml>=5.3.1 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (6.0.2)\n","Requirement already satisfied: toolz>=0.10.0 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (0.12.1)\n","Requirement already satisfied: importlib_metadata>=4.13.0 in /usr/local/lib/python3.11/dist-packages (from dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (8.7.0)\n","Requirement already satisfied: dask-expr<1.2,>=1.1 in /usr/local/lib/python3.11/dist-packages (from dask[dataframe]>=2.10.0->swifter) (1.1.21)\n","Requirement already satisfied: numpy>=1.23.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.0.0->swifter) (2.0.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.0.0->swifter) (2.9.0.post0)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.0.0->swifter) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=1.0.0->swifter) (2025.2)\n","Requirement already satisfied: pyarrow>=14.0.1 in /usr/local/lib/python3.11/dist-packages (from dask-expr<1.2,>=1.1->dask[dataframe]>=2.10.0->swifter) (18.1.0)\n","Requirement already satisfied: zipp>=3.20 in /usr/local/lib/python3.11/dist-packages (from importlib_metadata>=4.13.0->dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (3.22.0)\n","Requirement already satisfied: locket in /usr/local/lib/python3.11/dist-packages (from partd>=1.4.0->dask>=2.10.0->dask[dataframe]>=2.10.0->swifter) (1.0.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas>=1.0.0->swifter) (1.17.0)\n","Building wheels for collected packages: swifter\n","  Building wheel for swifter (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for swifter: filename=swifter-1.4.0-py3-none-any.whl size=16505 sha256=ee0914112f3d5228f7a90f363e892b4074416ce46814966506d29df6e976a6d3\n","  Stored in directory: /root/.cache/pip/wheels/ef/7f/bd/9bed48f078f3ee1fa75e0b29b6e0335ce1cb03a38d3443b3a3\n","Successfully built swifter\n","Installing collected packages: swifter\n","Successfully installed swifter-1.4.0\n"]}]},{"cell_type":"code","source":["import swifter\n","\n","df[\"review_sentiment\"] = df[\"review_text\"].swifter.apply(lambda x: analyser.polarity_scores(text=x)[\"compound\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":49,"referenced_widgets":["f2401ce8fc8b468f82b6d52f91a92f13","c2f570fb896547a68d77f70f2cda09c3","78a9c18c365149d8b8677f3bfe586ece","9b61f235d97c489982c7836022c4576d","284ba11201c84405a4d23004ceffa965","bae628d6c18c44969e35000a813baca0","d4dc8455d81f4f8cab877ec8e457ce8c","08b7951a2b9a4185a1d62a01f06dddcd","55848bc75c9245a48414ad27754145f8","65d97b78f79b4e83bfd46e277778e557","8ec239319bb64f458bee17b3b2e51291"]},"id":"pYdE2b4eaVTu","executionInfo":{"status":"ok","timestamp":1749452316005,"user_tz":-330,"elapsed":695586,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"06d193e6-bb4e-4560-9d2b-a0ad9922197a"},"execution_count":46,"outputs":[{"output_type":"display_data","data":{"text/plain":["Pandas Apply:   0%|          | 0/503697 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f2401ce8fc8b468f82b6d52f91a92f13"}},"metadata":{}}]},{"cell_type":"code","source":["df.groupby(by=\"beer_style\")[\"review_sentiment\"].agg(func=[\"mean\", \"count\"]).sort_values(by=\"mean\", ascending=False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":454},"id":"ifFbgw6tcT7Z","executionInfo":{"status":"ok","timestamp":1749452412796,"user_tz":-330,"elapsed":49,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"ebe90aad-a184-42c8-affe-5a78c09f15ab"},"execution_count":47,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                               mean  count\n","beer_style                                \n","Quadrupel (Quad)           0.857270   4808\n","Dortmunder / Export Lager  0.855248   1709\n","Flanders Red Ale           0.851925   2751\n","Roggenbier                 0.850934    137\n","Braggot                    0.850208    197\n","...                             ...    ...\n","Happoshu                   0.533456     55\n","American Malt Liquor       0.525374   1332\n","Japanese Rice Lager        0.515049    488\n","Light Lager                0.468794   4127\n","Low Alcohol Beer           0.396340    145\n","\n","[104 rows x 2 columns]"],"text/html":["\n","  <div id=\"df-b743a700-5436-41b7-a4af-239e040e7f58\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>mean</th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>beer_style</th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Quadrupel (Quad)</th>\n","      <td>0.857270</td>\n","      <td>4808</td>\n","    </tr>\n","    <tr>\n","      <th>Dortmunder / Export Lager</th>\n","      <td>0.855248</td>\n","      <td>1709</td>\n","    </tr>\n","    <tr>\n","      <th>Flanders Red Ale</th>\n","      <td>0.851925</td>\n","      <td>2751</td>\n","    </tr>\n","    <tr>\n","      <th>Roggenbier</th>\n","      <td>0.850934</td>\n","      <td>137</td>\n","    </tr>\n","    <tr>\n","      <th>Braggot</th>\n","      <td>0.850208</td>\n","      <td>197</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>Happoshu</th>\n","      <td>0.533456</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>American Malt Liquor</th>\n","      <td>0.525374</td>\n","      <td>1332</td>\n","    </tr>\n","    <tr>\n","      <th>Japanese Rice Lager</th>\n","      <td>0.515049</td>\n","      <td>488</td>\n","    </tr>\n","    <tr>\n","      <th>Light Lager</th>\n","      <td>0.468794</td>\n","      <td>4127</td>\n","    </tr>\n","    <tr>\n","      <th>Low Alcohol Beer</th>\n","      <td>0.396340</td>\n","      <td>145</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>104 rows × 2 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b743a700-5436-41b7-a4af-239e040e7f58')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b743a700-5436-41b7-a4af-239e040e7f58 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b743a700-5436-41b7-a4af-239e040e7f58');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e44a2763-d065-4cf9-94ba-ed74644b26dd\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e44a2763-d065-4cf9-94ba-ed74644b26dd')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e44a2763-d065-4cf9-94ba-ed74644b26dd button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 104,\n  \"fields\": [\n    {\n      \"column\": \"beer_style\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 104,\n        \"samples\": [\n          \"Gueuze\",\n          \"Belgian Pale Ale\",\n          \"American Pale Ale (APA)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"mean\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08628726325592415,\n        \"min\": 0.39634,\n        \"max\": 0.8572697587354409,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          0.793132777421424,\n          0.7456973416038989,\n          0.7457139222198415\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"count\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6129,\n        \"min\": 53,\n        \"max\": 41408,\n        \"num_unique_values\": 104,\n        \"samples\": [\n          1559,\n          6771,\n          18668\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":47}]},{"cell_type":"markdown","source":["This output answers the first part of our question - which beer style is most favorite, it is Quadrupel (Quad) (it is furthermore confirmed by a large number of reviews, as shown in the count column). To answer the second part of the question, how the written review compares to the overall review score for the Quadrupel (Quad) style, we can calculate the correlation coefficient between the review sentiment and the overall score. All we can say is that we expect this number to be positive, not necessarily high.\n","\n","Other styles have scored very close to the first one, with the difference being in the third decimal, and some beers have quite a large number of reviews."],"metadata":{"id":"twCd28ydfljy"}},{"cell_type":"code","source":["df_q5 = df[df[\"beer_style\"] == \"Quadrupel (Quad)\"]\n","df_q5[[\"review_sentiment\", \"review_overall\"]].corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":112},"id":"XRMCQ2orfVTL","executionInfo":{"status":"ok","timestamp":1749452496016,"user_tz":-330,"elapsed":49,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"d4caae82-d27b-4f08-eb7e-059b6855d9ce"},"execution_count":48,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                  review_sentiment  review_overall\n","review_sentiment          1.000000        0.259251\n","review_overall            0.259251        1.000000"],"text/html":["\n","  <div id=\"df-f3824dbd-bc6b-4f4b-ad5f-4243779858e3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>review_sentiment</th>\n","      <th>review_overall</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>review_sentiment</th>\n","      <td>1.000000</td>\n","      <td>0.259251</td>\n","    </tr>\n","    <tr>\n","      <th>review_overall</th>\n","      <td>0.259251</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f3824dbd-bc6b-4f4b-ad5f-4243779858e3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f3824dbd-bc6b-4f4b-ad5f-4243779858e3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f3824dbd-bc6b-4f4b-ad5f-4243779858e3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-812f3a6a-2316-437e-a25e-3b0709eafafe\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-812f3a6a-2316-437e-a25e-3b0709eafafe')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-812f3a6a-2316-437e-a25e-3b0709eafafe button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df_q5[[\\\"review_sentiment\\\", \\\"review_overall\\\"]]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"review_sentiment\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5237883502978656,\n        \"min\": 0.2592514111957288,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.2592514111957288,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"review_overall\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5237883502978656,\n        \"min\": 0.2592514111957288,\n        \"max\": 1.0,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1.0,\n          0.2592514111957288\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","source":["This seems to be the case, as we see a low positive correlation at around 0.26 between the overall review score and the compound score on the review sentiment. Let's check what's happening with the other review attributes."],"metadata":{"id":"RhR6aJFBfsHT"}},{"cell_type":"code","source":["_ = heatmap(data=df_q5[[\n","    \"review_overall\",\n","    \"review_appearance\",\n","    \"review_aroma\",\n","    \"review_taste\",\n","    \"review_palette\",\n","    \"review_sentiment\"\n","]].corr(), annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":557},"id":"RBwr7AOffpn0","executionInfo":{"status":"ok","timestamp":1749452517849,"user_tz":-330,"elapsed":619,"user":{"displayName":"Yashoda Harikrishna","userId":"06556182100040917307"}},"outputId":"ead3b638-19be-49d1-ab9e-111893d3699a"},"execution_count":49,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["All review attributes score similarly, at around 0.2 correlation. This is expected because a single number (the overall review) better expresses the users' opinion of the beer than the written text; that is from the viewpoint of a computer, because the NLP model is not performing at human-level. Moreover, a user could have given a high review of the beer, but leave a rather neutral comment / text. This contributes to the low correlation coefficient. The overall gist is that the coefficient is positive, indicating that increase in the compound score is correlated with an increase in the overall review score."],"metadata":{"id":"_dd7U3v1fx9j"}},{"cell_type":"code","source":[],"metadata":{"id":"XRZDEQdcfu3_"},"execution_count":null,"outputs":[]}]}